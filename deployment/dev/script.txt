PostgreSQL:

docker buildx build --no-cache -f postgres.dockerfile . -t postgres:1.0
docker image tag postgres:1.0 image-registry.apps.silver.devops.gov.bc.ca/c60f49-dev/postgres:1.0
docker image push image-registry.apps.silver.devops.gov.bc.ca/c60f49-dev/postgres:1.0

Druapl
docker buildx build --no-cache -f Dockerfile . -t drupal-base:1.0
docker image tag drupal-base:1.0 image-registry.apps.silver.devops.gov.bc.ca/c60f49-dev/drupal-base:1.0
docker image push image-registry.apps.silver.devops.gov.bc.ca/c60f49-dev/drupal-base:1.0

Nginx
docker buildx build --no-cache -f Dockerfile . -t nginx:1.0
docker image tag nginx:1.0 image-registry.apps.silver.devops.gov.bc.ca/c60f49-dev/nginx:1.0
docker image push image-registry.apps.silver.devops.gov.bc.ca/c60f49-dev/nginx:1.0


cp -rf /code/. /app;
mkdir -p /contents/public;
mkdir -p /contents/private;
chmod 775 /contents/public;
chmod 775 /contents/private;
ln -s /contents/public /app/web/sites/default/files;
ln -s /contents/private /app/private;
php drush cr;
php drush updb -y;
php drush cr;


Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: c60f49-dev
spec:
  selector:
    app: demo
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

Drupal
apiVersion: v1
kind: Service
metadata:
  name: drupal
  namespace: c60f49-dev
spec:
  selector:
    app: drupal
  ports:
    - protocol: TCP
      port: 8443
      targetPort: 8443
  sessionAffinity: ClientIP

Network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cas-html-allow-http
  namespace: c60f49-dev
spec:
  podSelector: {}
  ingress:
    - ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 8443
        - protocol: TCP
          port: 5432
        - protocol: TCP
          port: 3306
  policyTypes:
    - Ingress
status: {}



PostgreSQL settings
psql -h backend-service -p 5432 -d postgres -U postgres
CREATE EXTENSION pg_trgm;

pg_restore -h backend-service -p 5432 -d postgres -U postgres < cas-dump-20240529.sql
